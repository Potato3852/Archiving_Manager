#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

TEST_COUNT=0
PASSED_COUNT=0
FAILED_COUNT=0

echo_test() {
    echo -e "${YELLOW}TEST: $1${NC}"
    ((TEST_COUNT++))
}

echo_pass() {
    echo -e "${GREEN}PASS: $1${NC}"
    ((PASSED_COUNT++))
}

echo_fail() {
    echo -e "${RED}FAIL: $1${NC}"
    ((FAILED_COUNT++))
}

# –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤)
echo_test "Testing error message (no arguments)"
output=$(bash manager.sh 2>&1)
if echo "$output" | grep -q "Error: give 4 args"; then
    echo_pass "Error message displayed correctly"
else
    echo_fail "Error message not displayed. Got: $output"
fi

# –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã
echo_test "Creating test environment"
TEST_DIR=$(mktemp -d)
LOG_DIR="$TEST_DIR/test_logs"
mkdir -p "$LOG_DIR"

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã —Å —Ä–∞–∑–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏
for i in {1..5}; do
    touch -d "$i days ago" "$LOG_DIR/file$i.log"
    echo "This is test file $i" > "$LOG_DIR/file$i.log"
done

if [ -d "$LOG_DIR" ] && [ $(ls "$LOG_DIR" | wc -l) -eq 5 ]; then
    echo_pass "Test environment created successfully"
else
    echo_fail "Failed to create test environment"
fi

# –¢–µ—Å—Ç 3: –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —Å –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ–º –ª–∏–º–∏—Ç–∞ –±–æ–ª–µ–µ —á–µ–º –Ω–∞ N%
echo_test "Running script with exceeded limit (should trigger archiving)"
# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã —Ç–∞–∫, —á—Ç–æ–±—ã —Ä–∞–∑–º–µ—Ä –ø—Ä–µ–≤—ã—Å–∏–ª –ª–∏–º–∏—Ç –±–æ–ª–µ–µ —á–µ–º –Ω–∞ N%
dd if=/dev/zero of="$LOG_DIR/large_file1.log" bs=1M count=2 2>/dev/null
dd if=/dev/zero of="$LOG_DIR/large_file2.log" bs=1M count=2 2>/dev/null

# –õ–∏–º–∏—Ç 1MB, —Ç–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä ~4MB + —Ñ–∞–π–ª—ã = –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 15%
output=$(bash manager.sh "$LOG_DIR" 1 15 2 2>&1)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω
if [ -d "$LOG_DIR/backup" ] && [ $(find "$LOG_DIR/backup" -name "*.tar.gz" | wc -l) -gt 0 ]; then
    echo_pass "Archive created successfully"
else
    echo_fail "Archive not created. Output: $output"
fi

# –¢–µ—Å—Ç 4: –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ª–∏–º–∏—Ç–∞ + N%
echo_test "Running script within limit + threshold (should not trigger archiving)"
# –°–æ–∑–¥–∞–µ–º —á–∏—Å—Ç—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —ç—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
CLEAN_DIR=$(mktemp -d)
mkdir -p "$CLEAN_DIR/logs"
touch "$CLEAN_DIR/logs/file1.log"
echo "small file" > "$CLEAN_DIR/logs/file1.log"

# –õ–∏–º–∏—Ç 100MB, —Ç–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä ~0MB, N=15% - –Ω–µ –¥–æ–ª–∂–Ω–æ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å
output=$(bash manager.sh "$CLEAN_DIR/logs" 100 15 2 2>&1)

if echo "$output" | grep -q "Within threshold limits"; then
    echo_pass "Script correctly identified usage within limits"
else
    echo_fail "Script did not correctly identify usage within limits. Output: $output"
fi

rm -rf "$CLEAN_DIR"

# –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è —Ä–æ–≤–Ω–æ –Ω–∞ –ø–æ—Ä–æ–≥ (–Ω–µ –¥–æ–ª–∂–Ω–æ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å)
echo_test "Testing exact threshold (should not archive)"
THRESH_DIR=$(mktemp -d)
mkdir -p "$THRESH_DIR/logs"
# –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–º–µ—Ä –ø—Ä–∏–º–µ—Ä–Ω–æ 115MB –ø—Ä–∏ –ª–∏–º–∏—Ç–µ 100MB –∏ N=15 (—Ä–æ–≤–Ω–æ –ø–æ—Ä–æ–≥)
dd if=/dev/zero of="$THRESH_DIR/logs/file1.log" bs=1M count=115 2>/dev/null

output=$(bash manager.sh "$THRESH_DIR/logs" 100 15 2 2>&1)

if echo "$output" | grep -q "Within threshold limits"; then
    echo_pass "Script correctly handled exact threshold"
else
    echo_fail "Script failed at exact threshold. Output: $output"
fi

rm -rf "$THRESH_DIR"

# –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo_test "Testing non-existent directory handling"
output=$(bash manager.sh "/invalid/path/that/doesnt/exist" 10 15 2 2>&1)

if echo "$output" | grep -q "Error: Directory"; then
    echo_pass "Script correctly handled non-existent directory"
else
    echo_fail "Script did not handle non-existent directory correctly. Output: $output"
fi

# –û—á–∏—Å—Ç–∫–∞
rm -rf "$TEST_DIR"

# –ò—Ç–æ–≥–∏
echo
echo "=== TEST RESULTS ==="
echo "Total tests: $TEST_COUNT"
echo -e "${GREEN}Passed: $PASSED_COUNT${NC}"
echo -e "${RED}Failed: $FAILED_COUNT${NC}"

if [ $FAILED_COUNT -eq 0 ]; then
    echo -e "${GREEN}All tests passed! üéâ${NC}"
    exit 0
else
    echo -e "${RED}Some tests failed! ‚ùå${NC}"
    exit 1
fi
